# Use the official Python image from the Docker Hub
FROM --platform=linux/amd64 python:3.9.11-bullseye

# Install necessary packages
RUN apt-get update && apt-get install -y \
    curl \
    unixodbc-dev \
    gcc \
    g++ \
    build-essential \
    python-dev \
    python3-dev

# Install Microsoft SQL Server tools
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update \
    && ACCEPT_EULA=Y apt-get install -y msodbcsql18 mssql-tools18 \
    && echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc \
    && /bin/bash -c "source ~/.bashrc"

# Upgrade pip and install system-level dependencies
RUN pip3 install --upgrade pip
RUN pip3 install --upgrade cython numpy

# Install Poetry
RUN pip3 install poetry
RUN poetry config virtualenvs.create false
# Copy the pyproject.toml and poetry.lock files to the container
COPY pyproject.toml .

# Install dependencies
RUN poetry install --only main

# add sqlite3 sqlite3 >= 3.35.0., how to check sqlite3 version: sqlite3 --version
RUN pip install pysqlite3-binary

# Set up the working directory \
WORKDIR /app
Copy . /app


# set the environment variable
ENV PYTHONPATH "${PYTHONPATH}:/app"
ENV OPENAI_API_KEY "sk-proj-qJUXLz3esJY0E5SEpTQcT3BlbkFJA94UzfVp9l7AF2zmnhkL"

# Set the default command to run the sales_pipeline.py script
CMD ["python", "scripts/run_reviews.py"]